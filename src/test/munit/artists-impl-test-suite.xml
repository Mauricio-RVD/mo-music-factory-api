<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="artists-impl-test-suite.xml" />
	<global-property doc:name="Global Property" doc:id="ace8dcb5-ba9e-4a3f-8216-c752bb4d0666" name="test" value="local" />
	<configuration-properties doc:name="Configuration properties" doc:id="c0c1e3be-72e2-4c15-880c-2cfc492ffd4d" file="properties/${test}.properties" />
	<munit:test name="sr-get-artist-info-test" doc:id="a758ba09-f6ea-490c-9929-132103308e5b" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when Get Artist HTTP Request" doc:id="b6bfeb82-6aa9-45ec-8350-6e2423903bb4" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Artist Bio" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="f03e2cec-6b20-41d3-aec1-e4534f3a554d" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="last-fm-http-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/${last.fm.version}" attributeName="path" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[readUrl("classpath://examples/lastFmResponseValid.json","application/json")]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="lastFmProperties" doc:id="761d8bd1-5d0f-4e62-9464-6e9174951dcf" >
				<munit:variables >
					<munit:variable key="lastFmProperties" value="#[{method: p('last.fm.method'), apiKey: p('last.fm.api.key'), format: p('last.fm.format'), artist: 'The Beatles' }]" mediaType="application/java" />
					<munit:variable key="headerAttributes" value="#[{correlationId: '12345', clientId: '12345', clientSecret: '12345'}]" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="sr-get-artist-info" doc:id="82ecafd0-7b12-4de9-978c-22b931e7fccb" name="sr-get-artist-info"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:verify-call doc:name="Verify call" doc:id="0c4e80d4-635f-4668-b517-5503971e0cc8" processor="http:request" times="#[1]">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="GET" attributeName="method" />
					<munit-tools:with-attribute whereValue="Get Artist Bio" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="f03e2cec-6b20-41d3-aec1-e4534f3a554d" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="last-fm-http-config" attributeName="config-ref" />
					<munit-tools:with-attribute whereValue="/${last.fm.version}" attributeName="path" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
			<munit-tools:assert-equals doc:name="Assert statusCode is 201" doc:id="58c3a38b-ac37-4e8c-90e8-2bdae997fd5a" actual="#[payload.statusCode]" expected="201" message="statusCode is 201"/>
			<munit-tools:assert-that doc:name="Assert that bioUrl found" doc:id="391f17b2-11b0-49f7-8823-285a3e7db28f" is='#[MunitTools::startsWith("https://")]' expression="#[payload.bioUrl]" message="bioUrl not found"/>
		</munit:validation>
	</munit:test>
	<munit:test name="artists-impl-get-artists-test" doc:id="31e281b9-c74a-4726-8b62-f1938bf80b13" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="aa6540a5-39eb-4145-8684-abde85a00792" processor="db:select">
				<munit-tools:then-return >
					<munit-tools:payload value='#[output application/java&#10;---&#10;[{&#10;	ARTIST_ID: 2,&#10;	GROUP_NM: "MUnit Test",&#10;	FIRST_NM: "John",&#10;	LAST_NM: "Lennon",&#10;	BIRTH_DATE: "1940-01-01",&#10;	DEATH_DATE: "1980-11-01"&#10;}]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="groupName queryParam" doc:id="d93fa97f-871f-4cf9-ba32-34762f45bc50" >
				<munit:attributes value='#[{queryParams: {"groupName":"MUnit Test"}}]' />
				<munit:variables >
					<munit:variable key="headerAttributes" value="#[{correlationId: '12345', clientId: '12345', clientSecret: '12345'}]" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="impl-get-artists" doc:id="ab8cf141-b06d-41ce-9270-3ece90e20f6e" name="impl-get-artists"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that NOT null" doc:id="e159c3f5-a610-42e3-b6e8-9e6c4e9f0f0e" is="#[MunitTools::notNullValue()]" message="NOT null" expression="#[payload]"/>
			<munit-tools:assert-that doc:name="Assert that Artist firstName" doc:id="4a4809d3-9434-4109-81e0-855fb8ff8383" is="#[MunitTools::startsWith('John')]" message="NOT John" expression="#[payload.artists[0].firstName as String]"/>
			<munit-tools:assert-that doc:name="Assert that Artist lastName" doc:id="44f9768d-b60c-46da-ae46-30315cc8d045" is="#[MunitTools::startsWith('Lennon')]" message="NOT Lennon" expression="#[payload.artists[0].lastName as String]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="artists-impl-add-artists-test" doc:id="8642e52c-8af8-4e92-9e15-278e70827f5e" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when flow-ref" doc:id="42cb0c83-6510-4410-91a8-58b2ee0f96a1" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="ff1b7d3b-ae63-4c1d-8ec9-48e2fa6e241e" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="getArtistResponse" value="#[{&quot;statusCode&quot;: &quot;200&quot;, &quot;message&quot;: &quot;SUCCESS&quot;, &quot;searchCriteria&quot;: &quot;[lastName: 'Hickman', firstName: 'Johnny', groupName: 'Telegraph Canyon', birthDate: '1988-01-29', ]&quot;, &quot;artists&quot;: []}]" mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when insert artists" doc:id="5876a774-5757-4bcb-968b-0ab08d0931cc" processor="db:insert" />
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Post Artist Array" doc:id="c75b0d4f-afcb-4037-8472-8d5de5e613d1" >
				<munit:payload value='#[{&#10;  "artists": [&#10;    {&#10;      "groupName": "Telegraph Canyon",&#10;      "lastName": "Hickman",&#10;      "firstName": "Jill",&#10;      "dateOfBirth": "1988-01-29"&#10;    },&#10;    {&#10;      "groupName": "Telegraph Canyon",&#10;      "lastName": "Harrison",&#10;      "firstName": "Ted",&#10;      "mi": "B",&#10;      "dateOfBirth": "1982-03-21",&#10;"dateOfDeath": "2019-01-15"&#10;    }&#10;  ]&#10;}]' />
				<munit:variables >
					<munit:variable key="headerAttributes" value="#[{correlationId: '12345', clientId: '12345', clientSecret: '12345'}]" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="impl-add-artists" doc:id="482ca4c0-afbf-4dae-ad69-490bbb1a8909" name="impl-add-artists"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that NOT null" doc:id="937ee068-d8d1-4a34-9d56-781668df4e9b" is="#[MunitTools::notNullValue()]" message="NOT null" expression="#[payload]"/>
			<munit-tools:assert-that doc:name="Assert that added = 2" doc:id="11d7a9f7-2294-49e2-b3ec-b47719dcb229" is="#[MunitTools::equalTo(2)]" message="added = 2" expression="#[sizeOf(payload.results.addedArtists)]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="artists-impl-add-artists-duplicates-test" doc:id="3eb65f1a-638b-4e88-9c68-e8276da934e5" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when flow-ref" doc:id="a39f788c-638b-464c-bf3e-2dcb367e1a70" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="bff65453-67ad-49e5-aa4a-ead0f628d26c" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:variables >
						<munit-tools:variable key="getArtistResponse" value="#[{&quot;statusCode&quot;: &quot;200&quot;, &quot;message&quot;: &quot;SUCCESS&quot;, &quot;searchCriteria&quot;: &quot;[lastName: 'Hickman', firstName: 'Johnny', groupName: 'Telegraph Canyon', birthDate: '1988-01-29', ]&quot;, &quot;artists&quot;: [{&quot;artistId&quot;: 4,&quot;groupName&quot;: &quot;Telegraph Canyon&quot;,&quot;lastName&quot;: &quot;Hickman&quot;,&quot;firstName&quot;: &quot;Johnny&quot;,&quot;mi&quot;: &quot;&quot;,&quot;dateOfBirth&quot;: &quot;1988-01-29&quot;,&quot;dateOfDeath&quot;: &quot;&quot;}]}]" mediaType="application/java" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when insert artists" doc:id="82b4e90b-e0e7-4abf-a3da-2471e44af6a8" processor="db:insert" />
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Post Artist Array" doc:id="d4111ddc-f2f0-496f-9b93-e383daa3697c" >
				<munit:payload value='#[{&#10;  "artists": [&#10;    {&#10;      "groupName": "Telegraph Canyon",&#10;      "lastName": "Hickman",&#10;      "firstName": "Jill",&#10;      "dateOfBirth": "1988-01-29"&#10;    },&#10;    {&#10;      "groupName": "Telegraph Canyon",&#10;      "lastName": "Harrison",&#10;      "firstName": "Ted",&#10;      "mi": "B",&#10;      "dateOfBirth": "1982-03-21",&#10;"dateOfDeath": "2019-01-15"&#10;    }&#10;  ]&#10;}]' />
				<munit:variables >
					<munit:variable key="headerAttributes" value="#[{correlationId: '12345', clientId: '12345', clientSecret: '12345'}]" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="impl-add-artists" doc:id="f695f468-e95a-4f8c-8956-17c42476b2e3" name="impl-add-artists"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that NOT null" doc:id="275eca8f-c8af-4742-9c68-8ffe3562b0c3" is="#[MunitTools::notNullValue()]" message="NOT null" expression="#[payload]"/>
			<munit-tools:assert-that doc:name="Assert that duplicates = 2" doc:id="4a891fdd-757a-4963-954b-8fb9fd6c6a49" is="#[MunitTools::equalTo(2)]" message="duplicates = 2" expression="#[sizeOf(payload.results.duplicatedArtists)]"/>
		</munit:validation>
	</munit:test>

</mule>
